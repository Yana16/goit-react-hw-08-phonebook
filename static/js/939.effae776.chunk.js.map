{"version":3,"file":"static/js/939.effae776.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/modules/form/form.module.scss?7049","components/modules/form/Form.jsx","webpack://react-homework-template/./src/components/modules/filter/filter.module.css?c323","components/modules/filter/Filter.jsx","redux/contacts/contact-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/modules/contacts/contacts.module.scss?8bb7","components/modules/contacts/Contacts.jsx","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__eEVWj\",\"input\":\"form_input__4wBpu\",\"label\":\"form_label__K-MUj\",\"span\":\"form_span__lCjzb\",\"button\":\"form_button__pMnkE\"};","import React, { useState } from 'react';\nimport css from './form.module.scss';\nimport { useDispatch } from 'react-redux';\nimport { fetchAddContact } from 'redux/contacts/contact-operations';\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const formSumbit = e => {\n    e.preventDefault();\n    dispatch(fetchAddContact({ name, number }));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={formSumbit}>\n      <label className={css.label}>\n        <span className={css.span}>Name</span>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          required\n        />\n      </label>\n      <label className={css.label}>\n        <span className={css.span}>Number</span>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={e => {\n            setNumber(e.target.value);\n          }}\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__J5cdP\",\"label\":\"filter_label__G3z10\",\"span\":\"filter_span__ZcaQz\"};","import React from 'react';\nimport css from './filter.module.css';\nimport { filterContacts } from '../../../redux/filter/filter-slice';\nimport { useDispatch } from 'react-redux';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChange = value => dispatch(filterContacts(value));\n  return (\n    <label className={css.label}>\n      <span className={css.span}>Find contacts by name</span>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={e => handleChange(e.target.value)}\n      />\n    </label>\n  );\n};\nexport default Filter;\n","export const getAllContacts = store => store.contacts.items;\n","export const getFilteredContacts = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contacts_item__q09JK\",\"list\":\"contacts_list__fTYdj\",\"input\":\"contacts_input__ewTm3\",\"label\":\"contacts_label__ebRJM\",\"text\":\"contacts_text__Dz9ZB\",\"button\":\"contacts_button__z-niR\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getAllContacts } from 'redux/contacts/contact-selectors';\nimport { getFilteredContacts } from 'redux/filter/filter-selectors';\nimport { useEffect } from 'react';\nimport {\n  fetchAllContacts,\n  fetchDeleteContact,\n} from 'redux/contacts/contact-operations';\nimport css from './contacts.module.scss';\n\nconst Contacts = () => {\n  const isLoading = useSelector(store => store.contacts.isLoading);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getAllContacts);\n  const filter = useSelector(getFilteredContacts);\n  const filterContactsContacts = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleDelete = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n  const elements = filterContactsContacts?.map(({ name, id, number }) => {\n    return (\n      <li className={css.item} key={id} name={id}>\n        <p className={css.text}>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          className={css.button}\n          onClick={() => handleDelete(id)}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      <ul className={css.list}>{elements}</ul>\n    </>\n  );\n};\nexport default Contacts;\n","import Form from 'components/modules/form/Form';\nimport Filter from 'components/modules/filter/Filter';\nimport Contacts from 'components/modules/contacts/Contacts';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","reset","className","css","onSubmit","e","preventDefault","fetchAddContact","type","value","pattern","title","onChange","target","required","filterContacts","getAllContacts","store","contacts","items","getFilteredContacts","filter","isLoading","useSelector","filterContactsContacts","toLowerCase","includes","elements","map","id","onClick","fetchDeleteContact","handleDelete","useEffect","fetchAllContacts"],"sourceRoot":""}